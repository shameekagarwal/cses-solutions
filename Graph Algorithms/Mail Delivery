#include<bits/stdc++.h>
using namespace std;
#define sz 100100
#define ll long long
vector<pair<int, int>>adj[sz];
bool used[2 * sz];
int deg[sz];
vector<int>path;
void dfs(int x)
{
	while (adj[x].size())
	{
		auto it = adj[x].back();
		adj[x].pop_back();
		if (!used[it.second])
		{
			used[it.second] = 1;
			dfs(it.first);
		}
	}
	path.push_back(x);
}
int main()
{
	ios::sync_with_stdio(0);
	cin.tie(0); cout.tie(0);
	int n, m; cin >> n >> m;
	for (int i = 0; i < m; i++)
	{
		int x, y; cin >> x >> y;
		adj[x].push_back({y, i});
		adj[y].push_back({x, i});
		deg[x]++; deg[y]++;
	}
	for (int i = 1; i <= n; i++)
	{
		if (deg[i] % 2)
		{
			cout << "IMPOSSIBLE";
			return 0;
		}
	}
	dfs(1);
	for (int i = 0; i < m; i++)
	{
		if (!used[i])
		{
			cout << "IMPOSSIBLE";
			return 0;
		}
	}
	for (auto it : path)
		cout << it << " ";
	return 0;
}