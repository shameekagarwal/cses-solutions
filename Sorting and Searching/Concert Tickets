#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;
typedef tree<pair<int, int>, null_type, less<pair<int, int>>, rb_tree_tag, tree_order_statistics_node_update> pbds;
 
int main()
{
	ios::sync_with_stdio(0);
	cin.tie(0); cout.tie(0);
 
	int n, m; cin >> n >> m;
	vector<int>h(n), t(m);
	pbds s;
	for (int i = 0; i < n; i++)
	{
		cin >> h[i];
		s.insert({h[i], i});
	}
	for (auto&it : t)
		cin >> it;
 
	for (int i = 0; i < m; ++i)
	{
		int pos = s.order_of_key({t[i], n});
		if (pos == 0)
			cout << "-1\n";
		else
		{
			auto it = s.find_by_order(pos - 1);
			s.erase(it);
			cout << (*it).first << "\n";
		}
	}
 
	return 0;
}