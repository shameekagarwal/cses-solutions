#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> pbds;
int main()
{
	ios::sync_with_stdio(0);
	cin.tie(0); cout.tie(0);
	int n, x; cin >> x >> n;
	pbds lights;
	multiset<int>passages;
	lights.insert(0);
	lights.insert(x);
	passages.insert(x);
	for (int i = 0; i < n; ++i)
	{
		int a; cin >> a;
		int pos = lights.order_of_key(a);
		int low = *lights.find_by_order(pos - 1);
		int high = *lights.find_by_order(pos);
		lights.insert(a);
		auto er = passages.lower_bound(high - low);
		passages.erase(er);
		passages.insert(a - low);
		passages.insert(high - a);
		auto it = passages.rbegin();
		cout << *it << " ";
	}
	return 0;
}