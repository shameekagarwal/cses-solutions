#include<bits/stdc++.h>
using namespace std;
#define ld long double
vector<int>dx = {1, -1, 0, 0};
vector<int>dy = {0, 0, 1, -1};
int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0); cout.tie(0);
    int k; cin >> k;
    vector<vector<ld>>ans(8, vector<ld>(8, 1));
    for (int i = 0; i < 8; i++)
    {
        for (int j = 0; j < 8; j++)
        {
            vector<vector<ld>>dp(8, vector<ld>(8, 0));
            dp[i][j] = 1;
            for (int K = 0; K < k; K++)
            {
                vector<vector<ld>>dp2(8, vector<ld>(8, 0));
                for (int x = 0; x < 8; x++)
                {
                    for (int y = 0; y < 8; y++)
                    {
                        int dir = 0;
                        for (int d = 0; d < 4; d++)
                        {
                            int xn = x + dx[d];
                            int yn = y + dy[d];
                            if (xn > -1 && xn < 8 && yn > -1 && yn < 8)
                                dir++;
                        }
                        for (int d = 0; d < 4; d++)
                        {
                            int xn = x + dx[d];
                            int yn = y + dy[d];
                            if (xn > -1 && xn < 8 && yn > -1 && yn < 8)
                                dp2[xn][yn] += (dp[x][y] / dir);
                        }
                    }
                }
                dp = dp2;
            }
            for (int x = 0; x < 8; x++)
            {
                for (int y = 0; y < 8; y++)
                    ans[x][y] *= (1 - dp[x][y]);
            }
        }
    }
    ld finans = 0;
    for (auto it : ans)
    {
        for (auto it2 : it)
            finans += it2;
    }
    cout << fixed << setprecision(6) << finans;
    return 0;
}
