#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;
#define sz 10010
#define MOD 1000000007
#define ll long long
typedef tree<pair<int, int>, null_type, less<pair<int, int>>, rb_tree_tag, tree_order_statistics_node_update> pbds;
int main()
{
	ios::sync_with_stdio(0);
	cin.tie(0); cout.tie(0);
	pbds s;
	int n, v, q, L, R, idx; cin >> n >> q;
	idx = 0;
	vector<pair<int, int>>a(n);
	for (int i = 0; i < n; i++)
	{
		cin >> v;
		a[i] = {v, idx};
		s.insert({v, idx});
		idx++;
	}
	char ch;
	while (q--)
	{
		cin >> ch >> L >> R;
		if (ch == '!')
		{
			L--;
			s.erase(s.find(a[L]));
			a[L] = {R, idx};
			idx++;
			s.insert(a[L]);
		}
		else
		{
			int ita = s.order_of_key({L, -1});
			int itb = s.order_of_key({R, (int)1e8});
			cout << itb - ita << "\n";
		}
	}
	return 0;
}